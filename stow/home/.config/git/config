[include]
	path = ~/.config/git/local

[color]
	ui = auto

[core]
	pager = less -FXR
	whitespace = -trailing-whitespace
	excludesfile = ~/.config/git/excludes
	attributesfile = ~/.config/git/attributes

[merge]
	tool = nvimdiff

[push]
	default = upstream
	followTags = true

[status]
	submoduleSummary = true
	showUntrackedFiles = all

[branch]
	autoSetupRebase = always

[filter "irssi"]
	clean = "sed -e 's/sasl_password .*\";/sasl_password = \"<SECRET>\";/'"
[filter "spotifyd"]
	clean = "sed -e 's/password = .*/password = <SECRET>/;s/device_name = .*/device_name = <HOSTNAME>/;s/cache_path = .*/cache_path = <CACHE_DIR>/'"
	smudge = "sed -e \"s/device_name =.*/device_name = Spotifyd@$(hostname)/;s#cache_path = .*#cache_path = $HOME/.cache/spotifyd#\""

[fetch]
	recurseSubmodules = on-demand

[diff]
	mnemonicPrefix = true
	submodule = log
[diff "clojure"]
	xfuncname = "^[ \t]*(\\((ns|def[a-zA-Z0-9_-]*).*)$"

[log]
	abbrevCommit = true
	follow = true

[mergetool]
	keepBackup = false
	prompt = false

[init]
	defaultBranch = main

[commit]
	verbose = true

[alias]
	mg = smart-merge

	wip = commit -am 'wip'
	fixup = commit -am 'fixup'

	rb = rebase
	rbi = rebase --interactive
	rba = rebase --abort
	rbc = rebase --continue

	cp = cherry-pick

	it = !git init && git commit -m \"root\" --allow-empty

	; based on magit's commands, and vim (sort of)
	bl = branch --list
	bv = branch --verbose
	br = branch --remotes
	bd = branch --delete
	bdd = branch -delete --force
	bc = branch
	bcs = checkout -b
	bs = checkout

	cc = commit
	cca = commit --all
	ca = commit --amend --no-edit
	caa = commit --all --amend --no-edit
	cw = commit --amend
	cwa = commit -all --amend

	pu = push
	pp = !git push -u origin "$(git rev-parse --abbrev-ref HEAD)"
	pf = push --force-with-lease

	gs = status -sb

	su = add --update
	sa = add
	saa = add .
	sp = add --patch

	du = diff
	ds = diff --staged
	dc = show

	fo = smart-pull
	ff = fetch

	lg = log --graph --pretty=format':%C(yellow)%h%Cblue%d%Creset %s %Cgreen(%an, %ar)%Creset'
	ll = log --oneline
	lr = log --graph --pretty=format':%C(yellow)%h%Cblue%d%Creset %s %C(green)(%an, %ar)%Creset' --simplify-by-decoration
	lc = for-each-ref --sort=committerdate refs/heads --format='%(refname:short): %(committerdate:relative)'
	lf = log --pretty=format':%C(yellow)%h %C(reset)%s %C(green)(%an, %ar)%Creset' --follow

